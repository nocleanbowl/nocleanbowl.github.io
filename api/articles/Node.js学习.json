{"title":"Node.js学习","uid":"20a591f774ffe3361ca997400b63e6aa","slug":"Node.js学习","date":"2021-08-03T08:34:54.000Z","updated":"2021-08-03T12:10:11.055Z","comments":true,"path":"api/articles/Node.js学习.json","keywords":null,"cover":null,"content":"<h1 id=\"命令行窗口\"><a href=\"#命令行窗口\" class=\"headerlink\" title=\"命令行窗口\"></a>命令行窗口</h1><p>1.命令行窗口(小黑屏)、cMD窗口、终端、shell</p>\n<ul>\n<li>开始菜单–&gt;运行–&gt; cmd –&gt;回车</li>\n</ul>\n<p>常用的指令:</p>\n<ul>\n<li>dir 列出当前目录下的所有文件</li>\n<li>cd目录名进入到指定的目录</li>\n<li>md目录名创建一个文件夹</li>\n<li>rd目录名删除一个文件夹</li>\n</ul>\n<p>目录：</p>\n<ul>\n<li>．表示当前目录</li>\n<li>..表示上一级目录</li>\n</ul>\n<p>环境变量（Windows系统中变量）</p>\n<ul>\n<li><p>当我们在命令行窗口打开一个文件,或调用一个程序时，<br>系统会首先在当前目录下寻找文件程序，如果找到了则直接打开<br>如果没有找到则会依次到环境变量path的路径中寻找，直到找到为止如果没找到则报错</p>\n</li>\n<li><p>将经常访问的程序和文件的路径加入path</p>\n</li>\n</ul>\n<h1 id=\"进程和线程\"><a href=\"#进程和线程\" class=\"headerlink\" title=\"进程和线程\"></a>进程和线程</h1><ul>\n<li>进程：程序的一次执行</li>\n<li>线程：计算机中最小的计算单位</li>\n<li>单线程  JS是单线程</li>\n<li>多线程</li>\n</ul>\n<h1 id=\"Node-js简介\"><a href=\"#Node-js简介\" class=\"headerlink\" title=\"Node.js简介\"></a>Node.js简介</h1><p>Node.js是一个能够在服务器端运行JavaScript的开放源代码、跨平台JavaScript运行环境</p>\n<ul>\n<li>传统的服务器都是多线程的，每进来一个请求，就创建一个线程去处理请求</li>\n<li>Node的服务器是单线程的，Node处理请求时是单线程，但在后台拥有一个I/O线程池</li>\n</ul>\n<h1 id=\"模块化\"><a href=\"#模块化\" class=\"headerlink\" title=\"模块化\"></a>模块化</h1><p>便于维护、复用</p>\n<ul>\n<li>在Node中，一个JS就是一个模块，通过require()函数引入外部的模块</li>\n<li>在Node中，每一个JS代码都是独立运行在一个函数中，而不是全局作用域</li>\n<li>可以通过exports向外部暴露变量<br><code>exports.x = 1</code></li>\n<li>require()传递一个文件的路径作为参数，如果是相对路劲，必须以.或..开头<br><code>require(&quot;./xxx.js&quot;)</code></li>\n<li>使用require()引入模块后，该函数会返回一个对象，代表引入的模块<br><code>var md = require(&quot;./xxx.js&quot;)</code></li>\n</ul>\n<h2 id=\"模块标识\"><a href=\"#模块标识\" class=\"headerlink\" title=\"模块标识\"></a>模块标识</h2><ul>\n<li>核心模块<br>  由node引擎提供的模块<br>  核心模块的标识就是模块的名称</li>\n<li>文件模块<br>  由用户自己创建的模块<br>  文件模块的标识就是文件的路径（绝对路径、相对路径）</li>\n<li>node中有一个全局对象global，作用和网页中的window类似<br>  在全局中创建的变量都会作为global的属性保存<br>  在全局中创建的函数都会作为global的方法保存</li>\n<li>arguments.callee 保存当前执行的函数对象</li>\n</ul>\n<p>当node在执行模块中的代码时，它会首先将代码放入<br><code>function (exports, require,module, __filename，__dirname)&#123;&#125;</code><br>实际上模块中的代码都是包装在一个函数中执行的，并且在函数执行时，同时传递进了5个实参</p>\n<ul>\n<li>exports 该对象用来将变量或函数暴露到外部</li>\n<li>require函数，用来引入外部的模块</li>\n<li>module<br>  module代表的是当前模块本身<br>  exports就是module的属性<br>  既可以使用exports导出，也可以使用module.exports导出</li>\n<li>__filename 当前模块的完整路径</li>\n<li>__dirname 当前模块所在文件夹的完整路径</li>\n</ul>\n","feature":true,"text":"命令行窗口1.命令行窗口(小黑屏)、cMD窗口、终端、shell 开始菜单–&gt;运行–&gt; cmd –&gt;回车 常用的指令: dir 列出当前目录下的所有文件 cd目录名进入到指定的目录 md目录名创建一个文件夹 rd目录名删除一个文件夹 目录： ．表示当前目录 .....","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%AA%97%E5%8F%A3\"><span class=\"toc-text\">命令行窗口</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B\"><span class=\"toc-text\">进程和线程</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Node-js%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">Node.js简介</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%A8%A1%E5%9D%97%E5%8C%96\"><span class=\"toc-text\">模块化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A8%A1%E5%9D%97%E6%A0%87%E8%AF%86\"><span class=\"toc-text\">模块标识</span></a></li></ol></li></ol>","author":{"name":"no clean bowl","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"小白不摸鱼","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"GitHub访问和下载限制","uid":"4e80388c598e859e00e4ef7f065d1fc0","slug":"访问GitHub","date":"2021-08-04T00:13:30.000Z","updated":"2021-08-04T03:14:46.277Z","comments":true,"path":"api/articles/访问GitHub.json","keywords":null,"cover":[],"text":"情景 由于GitHub是一个国外的网站，访问经常会受到限制。访问速度和下载速度都非常慢 该博客是为了解决GitHub的访问和下载速度问题。 访问解决原理 hosts 文件是存放在电脑本地的域名解析文件，这是浏览器在访问各种网站时可能会用到的文件。 我们访问网站的时候，本质上访问的...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[],"tags":[],"author":{"name":"no clean bowl","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"小白不摸鱼","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"前端进阶学习","uid":"1f9d35329d81956eb492c6ed3d61fcfc","slug":"前端进阶学习","date":"2021-08-02T09:32:43.000Z","updated":"2021-08-03T06:04:06.309Z","comments":true,"path":"api/articles/前端进阶学习.json","keywords":null,"cover":null,"text":"Ajax简介Ajax的全称:Asynchronous Javascript And XML，就是使用JS代码获取服务器数据 Ajax的作用获取服务器的数据 Ajax的效果在不刷新整个页面的情况下，通过一个url地址获取服务器的数据，然后进行页面的局部刷新局部 异步 刷新 基础知识...","link":"","photos":[],"count_time":{"symbolsCount":480,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"no clean bowl","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"小白不摸鱼","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}