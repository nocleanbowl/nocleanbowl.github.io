[{"id":"edba0911ce1cb2f14024ceee438ad7ac","title":"github","content":"使用GitHub目的借助GitHub托管项目代码\n基本概念\n仓库（repository）  用来存放项目代码，每个项目对应一个仓库\n收藏（star）  收藏项目，方便下次查看\n复制克隆项目（fork）  该fork项目独立存在  发起请求（pull request）  合并代码\n关注（watch）  关注项目，当项目更新可以接收到通知\n事务卡片（issue）  发现bug时讨论\n\n常用git命令git branch 查看本地所有分支git status 查看当前状态git commit 提交git branch -a 查看所有的分支git branch -r 查看远程所有分支git commit -m “init” 提交并且加注释git remote add origin &#x67;&#105;&#116;&#64;&#49;&#57;&#x32;&#46;&#x31;&#54;&#56;&#46;&#49;&#46;&#x31;&#49;&#57;:ndshowgit push origin master 将文件给推到服务器上git remote show origin 显示远程库origin里的资源git checkout -b dev 建立一个新的本地分支devgit merge origin/dev 将分支dev与当前分支进行合并git checkout dev 切换到本地dev分支git remote show 查看远程库git add .  提交所有文件\n","slug":"github","date":"2021-09-03T06:49:19.000Z","categories_index":"","tags_index":"","author_index":"no clean bowl"},{"id":"a5b97ab8932b5f038d4330f012aa0a62","title":"jQuery","content":"Ajax简介Ajax全称为Asynchronous JavaScript And XML，就是异步的JS和XML。通过Ajax可以在浏览器中向服务器发送异步请求，最大的优势:无刷新获取数据。\nXML简介xML可扩展标记语言。XMLT被设计用来传输和存储数据。XML和 HTML类似，不同的是HTML中都是预定义标签，而XML中没有预定义标签，全都是自定义标签，用来表示一些数据。\nHTTPHTTP(hypertext transport protocol)协议『超文本传输协议』﹐协议详细规定了浏览器和万维网服务器之间互相通信的规则。\n请求报文响应报文jQueryJquery是JS库，存放用JS写的函数，简化代码\n自定义的功能代码\n$(document).ready(function()&#123;\n    alert(&quot;wwj&quot;)\n&#125;)\n快捷方式\n$(function()&#123;\n    alert(111);\n&#125;)\n\ndom对象和jQuery对象\ndom对象：使用JS语法表示的对象，也就是JS对象var obj = document,getElementById(&quot;id&quot;)\njQuery对象：使用jquery语法表示的对象,都是数组var jobj = $(&quot;#id&quot;)\ndom对象转为jQuery：$(dom对象)\njQuery转为dom对象：从数组中获取第一个对象，使用[0]或get(0)\n\n选择器\nid选择器 $(&quot;#id&quot;)\nclass选择器 $(&quot;.class&quot;)\n标签选择器$(&quot;标签名&quot;)\n所有选择器$(&quot;*&quot;)\n组合选择器$(&quot;id选择器,class选择器,标签选择器&quot;)\n\n表单选择器，\n使用标签的type属性值,定位dom对象的方式。`$ (“:type属性值”)\n例如:$(“:text”) ,选择的是所有的单行文本框，$(“:button” ) ，选择的是所有的按钮。\n\n过滤器\n在定位了dom对象后，根据一些条件筛选dom对象  $(&quot;选择器:first&quot;)数组中的第一个dom对象  $(&quot;选择器:last&quot;)数组中的最后一个dom对象  $(&quot;选择器:eq (数组的下标)&quot;)获取指定下标的dom对象  $ &quot;选择器:lt(下标) &quot;)获取小于下标的所有dom对象  $(&quot;选择器:gt(下标)&quot;) 获取大于卞标的所有dom对象\n表单属性过滤器:根据表单中don对象的状态情况，定位dom对象的。  启用状态enabled  在可用状态disabled  选择状态checked ,例如radio,checkbox  选择可用的文本框$(&quot;:text:enabled&quot;)  选择不可用的文本框$(&quot;:text:disabled&quot;)  复选框选中的元素$(&quot;:checkbox:checked&quot;)  选择下拉列表中的被选中值选择器&gt;option:selected\n\n绑定事件$(选择器).事件名称(事件处理函数)$(&quot;#id&quot;).click(function()&#123;&#125;)\non绑定事件\n\n$选择器).on(事件名称，事件的处理函数)$(&quot;#btn&quot;).on(&quot;click&quot;,function() &#123;&#125;)\n\n函数val\n操作数组中DOM对象的value属性.\n$(选择器).val():无参数调用形式，读取数组中第一个DOM对象的value属性值\n$(选择器).val(值):有参形式调用;对数组中所有DOM对象的value属性值进行统一赋值\n\ntext\n操作数组中所有DOM对象的文字显示内容属性\n$(选择器).text():无参数调用，读取数组中所有DOM对象的文字显示内容，将得到内容拼接为一个字符串返回\n$(选择器).text(值):有参数方式，对数组中所有DOM对象的文字显示内容进行统一赋值\n\nattr\n对val, text之外的其他属性操作\n$(选择器).attr(“属性名”):获取DOM数组第一个对象的属性值\n$(选择器).attr(“属性名”,“值”):对数组中所有DOM对象的属性设为新值\n\nremove$(选择器).remove():将数组中所有DOM对象及其子对象一并删除\nempty\n$(选择器).empty():将数组中所有DOM对象的子对象删除\n\nappend为数组中所有DOM对象添加子对象$(选择器).append(“动态添加“)\nhtml\n设置或返回被选元素的内容( innerHTML)。\n$(选择器).html():无参数调用方法，获取DOM数组第一个匹元素的内容。\n$(选择器).html(值):有参数调用，用于设置DOM数组中所有元素的内容。\n\neach\neach是对数组，json和 dom数组等的遍历,对每个元素调用一次函数。\n语法1: $.each(要遍历的对象, function(index,element){处理程序})\n语法2: jQuery对象.each( function( index, element ){处理程序})\n\najax\n$.ajax()\n\n$post()︰使用post方式做ajax请求。\n\n$ajax() : jquery中实现ajax的核心函数\n\n$.get() :使用get方式发送ajax请求。\n\n$.post()和$.get()他们在内部都是调用的$.ajax ( )\n\n$.ajax函数的使用，函数的参数表示请求的url，请求的方式，参数值等信息\n\n$.ajax参数是一个json的结构。例如:$ .ajax(&#123;名称:值,名称1:值1..... &#125; )例如: $.ajax(&#123; async:true , contentType : &quot;application/json&quot;,data: &#123;name:&quot;list&quot;,age:&quot;20&quot;&#125;, dataType:&quot;json&quot;), error:function()&#123;&#125;json结构的参教说明:1 async:是一个boolean类型的值，默认是true ，表示异步请求的。可以不写async这个配置项xmlHttp.open (get,url ,true)，第三个参数一样的意思。2 contentType:一个字符串，表示从浏览器发送服务器的参数的类型。可以不写。例如你想表示请求的参数是json格式的,可以写application/jsonI3 data:可以是字符串，数组，json，表示请求的参数和参数值。4 dataType:表示期望从服务器端返回的数据格式(xml,html,text,json)5 error:一个function ,表示当请求发生错误时，执行的函数。6 sucess:一个function ,请求成功了，从服务器返回了数据，执行sucess函数7 url:请求的地址8 type:请求方式,get或者post,不用区分大小写\n\n\n","slug":"Ajax","date":"2021-08-12T11:23:15.000Z","categories_index":"","tags_index":"","author_index":"no clean bowl"},{"id":"4e80388c598e859e00e4ef7f065d1fc0","title":"GitHub访问和下载限制","content":"情景\n由于GitHub是一个国外的网站，访问经常会受到限制。访问速度和下载速度都非常慢\n该博客是为了解决GitHub的访问和下载速度问题。\n\n访问解决原理\nhosts 文件是存放在电脑本地的域名解析文件，这是浏览器在访问各种网站时可能会用到的文件。\n我们访问网站的时候，本质上访问的是网站所在的IP 地址，但这些数字不方便人们记忆，\n因而就有了域名，域名使用字符串来代替 IP 地址，例如 202.108.22.5 对应的域名就是 www.baidu.com 。\n\n当我们输入一个域名时，我们的本机首先会先在hosts文件中查找有无该域名对应的IP地址，若有，则直接访问；若没有则通过DNS域名解析服务解析出IP地址。\n解决方案（一）想要打开的 GitHub 网站上，只要修改本地的 hosts 文件，就可以跳过中间的 DNS 解析环节，直接访问网站的 IP 地址。\n这里写的是基于Windows的操作，其它操作系统也大同小异，可以参考GitHub上大佬写的项目：点这里\n\n首先，找到hosts文件，路径为：C:\\Windows\\System32\\drivers\\etc\n建议先CTRL+C、CTRL+V备份一份hosts文件，万一改毁了呢是吧\n用记事本打开hosts文件，另起一行粘贴下面的列表185.199.108.154               github.githubassets.com\n140.82.113.22                 central.github.com\n185.199.108.133               desktop.githubusercontent.com\n185.199.108.153               assets-cdn.github.com\n185.199.108.133               camo.githubusercontent.com\n185.199.108.133               github.map.fastly.net\n199.232.69.194                github.global.ssl.fastly.net\n140.82.112.4                  gist.github.com\n185.199.111.153               github.io\n140.82.114.4                  github.com\n140.82.113.6                  api.github.com\n185.199.108.133               raw.githubusercontent.com\n185.199.108.133               user-images.githubusercontent.com\n185.199.108.133               favicons.githubusercontent.com\n185.199.108.133               avatars5.githubusercontent.com\n185.199.108.133               avatars4.githubusercontent.com\n185.199.108.133               avatars3.githubusercontent.com\n185.199.108.133               avatars2.githubusercontent.com\n185.199.108.133               avatars1.githubusercontent.com\n185.199.108.133               avatars0.githubusercontent.com\n185.199.108.133               avatars.githubusercontent.com\n140.82.113.9                  codeload.github.com\n52.217.193.17                 github-cloud.s3.amazonaws.com\n52.217.40.68                  github-com.s3.amazonaws.com\n52.216.140.52                 github-production-release-asset-2e65be.s3.amazonaws.com\n52.216.232.163                github-production-user-asset-6210df.s3.amazonaws.com\n52.216.109.147                github-production-repository-file-5c1aeb.s3.amazonaws.com\n185.199.108.153               githubstatus.com\n64.71.168.201                 github.community\n185.199.108.133               media.githubusercontent.com\n编辑好的文件以txt文本格式保存在桌面上（因为hosts文件是不允许用户更改的）\n对hosts.txt进行重命名，去除 .txt 的后缀，得到一份与编辑之前的同名文件 hosts。\n将放在桌面的 hosts 文件拖拽到文件夹 \\etc 下，覆盖原先的 hosts 文件。（之前有备份的不用怕）\n\n完成之后理论上是可以直接访问GitHub了，但我发现我的文件可能没有生效，这时可以尝试刷新DNS在 CMD 窗口输入：ipconfig /flushdns这样就可以愉快地访问GitHub啦！\n解决方案（二）使用镜像网站：https://hub.fastgit.org将访问路径中https://github.com 换为 https://hub.fastgit.org即可\n下载解决我们可以借助Gitee网站来下载GitHub项目的所有文件。Gitee是国内的网站，下载速度会快很多。\n\n首先复制浏览器地址栏的项目地址。\n \n\n 接着打开 Gitee 网站，登录账号之后，点击右上角的加号，选择「从 GitHub/GitLab 导入仓库」。\n \n\n 将刚刚复制到剪贴板的 GitHub 项目链接，粘贴到下方的 Git 仓库 URL 输入框中，之后我们还要填写一下其他的内容，例如仓库名称、存放的路径、以及仓库的查看权限。\n \n\n 粘贴 GitHub 项目链接之后，Gitee 会对导入的内容进行识别，如果发现 Gitee 之前已经有人导入过这个项目了，它会在下方进行提示。此时你可以选择不导入，访问他人已经克隆好的项目，也可以执意选择自己导入，不使用别人已经导入 Gitee 的项目。\n \n\n 通常不到一分钟就可以导入成功，这时就可以很方便地通过gitee下载了\n \n\n\nGitHub是一个资料十分齐全的网站，Gitee大部分都是国人在使用，所以GitHub会丰富很多，请开始知识的探索吧！\n","slug":"访问GitHub","date":"2021-08-04T00:13:30.000Z","categories_index":"","tags_index":"","author_index":"no clean bowl"},{"id":"20a591f774ffe3361ca997400b63e6aa","title":"Node.js学习","content":"命令行窗口1.命令行窗口(小黑屏)、cMD窗口、终端、shell\n\n开始菜单–&gt;运行–&gt; cmd –&gt;回车\n\n常用的指令:\n\ndir 列出当前目录下的所有文件\ncd目录名进入到指定的目录\nmd目录名创建一个文件夹\nrd目录名删除一个文件夹\n\n目录：\n\n．表示当前目录\n..表示上一级目录\n\n环境变量（Windows系统中变量）\n\n当我们在命令行窗口打开一个文件,或调用一个程序时，系统会首先在当前目录下寻找文件程序，如果找到了则直接打开如果没有找到则会依次到环境变量path的路径中寻找，直到找到为止如果没找到则报错\n\n将经常访问的程序和文件的路径加入path\n\n\n进程和线程\n进程：程序的一次执行\n线程：计算机中最小的计算单位\n单线程  JS是单线程\n多线程\n\nNode.js简介Node.js是一个能够在服务器端运行JavaScript的开放源代码、跨平台JavaScript运行环境\n\n传统的服务器都是多线程的，每进来一个请求，就创建一个线程去处理请求\nNode的服务器是单线程的，Node处理请求时是单线程，但在后台拥有一个I/O线程池\n\n模块化便于维护、复用\n\n在Node中，一个JS就是一个模块，通过require()函数引入外部的模块\n在Node中，每一个JS代码都是独立运行在一个函数中，而不是全局作用域\n可以通过exports向外部暴露变量exports.x = 1\nrequire()传递一个文件的路径作为参数，如果是相对路劲，必须以.或..开头require(&quot;./xxx.js&quot;)\n使用require()引入模块后，该函数会返回一个对象，代表引入的模块var md = require(&quot;./xxx.js&quot;)\n\n模块标识\n核心模块  由node引擎提供的模块  核心模块的标识就是模块的名称\n文件模块  由用户自己创建的模块  文件模块的标识就是文件的路径（绝对路径、相对路径）\nnode中有一个全局对象global，作用和网页中的window类似  在全局中创建的变量都会作为global的属性保存  在全局中创建的函数都会作为global的方法保存\narguments.callee 保存当前执行的函数对象\n\n当node在执行模块中的代码时，它会首先将代码放入function (exports, require,module, __filename，__dirname)&#123;&#125;实际上模块中的代码都是包装在一个函数中执行的，并且在函数执行时，同时传递进了5个实参\n\nexports 该对象用来将变量或函数暴露到外部\nrequire函数，用来引入外部的模块\nmodule  module代表的是当前模块本身  exports就是module的属性  既可以使用exports导出，也可以使用module.exports导出\n__filename 当前模块的完整路径\n__dirname 当前模块所在文件夹的完整路径\n\n","slug":"Node.js学习","date":"2021-08-03T08:34:54.000Z","categories_index":"","tags_index":"","author_index":"no clean bowl"},{"id":"1f9d35329d81956eb492c6ed3d61fcfc","title":"前端进阶学习","content":"Ajax简介Ajax的全称:Asynchronous Javascript And XML，就是使用JS代码获取服务器数据\n\nAjax的作用获取服务器的数据\nAjax的效果在不刷新整个页面的情况下，通过一个url地址获取服务器的数据，然后进行页面的局部刷新局部 异步 刷新\n\n基础知识服务器与客户端\n服务器：能够提供某种服务的电脑\n客户端：想使用服务器所提供服务的电脑\n服务器更多会选择Linux操作系统，个人电脑更多选择Windows操作系统\n\n网络\nIP地址：通过IP地址找到特定的服务器\n域名：方便人们查找服务器\n查看本地IP地址：ipconfig\n查看百度IP地址：ping baidu.com\n域名解析服务器DNS：提供域名与IP地址的映射关系\n访问服务器的流程：本机hosts文件-&gt;DNS服务器-&gt;服务器\n端口：区分一台服务器上提供的不同服务的\n\n通信协议通信协议就是计算机交流时事先约定的规则HTTP协议中，请求头、响应头、请求体、响应体\n\nHTTP、HTTPS 超文本传输协议\nFTP 文件传输协议\nSMTP 简单邮件传输协议\n\n","slug":"前端进阶学习","date":"2021-08-02T09:32:43.000Z","categories_index":"","tags_index":"","author_index":"no clean bowl"},{"id":"dbab3e51962af8a6fa9bdc9d0d751c84","title":"在markdown格式中插入HTML代码","content":"情景今天在使用markdown编写博客的过程中，发现markdown可以自动把HTML代码解析出来（这正是markdown的便捷之处），但同时也引发一个问题：当我们确实要插入一段HTML代码，而不是用它来编写样式时，该怎么办？\n解决方案经过上网搜索，总结了两种解决方法，推荐第二种，比较简便。\n1.使用字符实体\n\n\n显示结果\n描述\n实体名称\n实体编号\n\n\n\n\n空格\n&amp;nbsp;\n&amp;#160;\n\n\n&lt;\n小于号\n&amp;lt;\n&amp;#60;\n\n\n&gt;\n大于号\n&amp;gt;\n&amp;#62;\n\n\n&amp;\n和号\n&amp;amp;\n&amp;#38;\n\n\n“\n引号\n&amp;quot;\n&amp;#34;\n\n\n`\n撇号\n&amp;apos;(IE不支持)\n&amp;#39;\n\n\n这里输入时也遇到一些问题，用字符串输入一些特殊字符时，用转义符号‘\\’另外，在输入表格时也有一点小心得。之前在网上学习的表格用-|-|-|表示，单元格之间用|隔开，但由于每格字数不等，在md文件中显示错乱，虽然网页中能表示成表格，但md文档可读性不好，建议每行的|对齐，不足的用空格或’-‘补齐。\n2.使用代码行/块\n单行代码使用代码行，引用使用单个符号，反引号（`），就是英文状态下的波浪线。（符号位于 ESC 键下方）    我是代码行\n&#96;我是代码行&#96;\n多行代码使用代码块，用三个反引号（`）定义段开始和结束\n我是代码块\n\n这就是目前我看到的方法了，以后想到再补充。首次接触markdown哈哈\n","slug":"在markdown格式中插入HTML代码","date":"2021-08-02T06:40:34.000Z","categories_index":"","tags_index":"","author_index":"no clean bowl"},{"id":"ad35d412a0340babc425289df71e5e45","title":"前端基础学习","content":"网页的基本组成网页是构成网站的基本元素，它通常由图片、链接、文字、声音、视频等元素组成\n什么是HTMLHTML指的是超文本标记语言，用来描述网页的一种语言HTML不是一种编程语言，而是一种标记语言标记语言是一套标记标签\n常用的浏览器IE、火狐（Firefox）、谷歌（chrome）、Safari和Opera\nWeb标准的三大组成部分Web标准是由W3C组织和其他标准化组织指定的一系列标准的集合。W3C（万维网联盟）是国际最著名的标准化组织主要包括结构(Structure)、表现(Presentation)和行为(Behavior)\n\n\n\n标准\n说明\n\n\n\n结构\n结构用于对网页元素进行整理和分类，现阶段主要学的是HTML\n\n\n表现\n表现用于设置网页元素的版式、颜色、大小等外观样式，主要指的是CSS\n\n\n行为\n行为是指网页模型的定义及交互的编写，现阶段主要学的是JavaScript\n\n\n标签的书写注意规范由尖括号包围：&lt;html&gt;成对出现：&lt;html&gt;&lt;/html&gt;单标签：&lt;br /&gt;包含关系、并列关系\nHTML骨架标签1. 表格标签 （展示数据，清晰）&lt;table&gt;\n\t&lt;caption&gt;表格大标题&lt;&#x2F;caption&gt;\n\t&lt;tr&gt;\n\t\t&lt;td&gt;&lt;&#x2F;td&gt;\n\t\t...\n\t&lt;&#x2F;tr&gt;\n\t...\n&lt;&#x2F;table&gt;\n\n&lt;caption&gt;:表格大标题&lt;th&gt;:(table head)表头单元格，加粗居中显示&lt;thead&gt;:表格头部区域 &lt;tbody&gt;：表格主体区域 &lt;tfoot&gt;表格的底部\n表格属性（通常通过CSS设置）\n\n\n\n属性名\n属性值\n描述\n\n\n\nalign\nleft、center、right\n规定表格相对周围元素的对齐方式\n\n\nborder\n1或””\n规定表格单元格是否拥有边框，默认为””，表示没有边框\n\n\ncellpadding\n像素值\n规定单元边沿与其内容的空白，默认1像素\n\n\ncellspacing\n像素值\n规定单元格之间的空白，默认2像素\n\n\nwidth\n像素值或百分比\n规定表格的宽度\n\n\n合并单元格跨行合并：rowspan=”合并单元格的个数”；最上侧作为目标单元格跨列合并：colspan=”合并单元格的个数”；最左侧作为目标单元格\n2. 列表标签（布局标签，整齐）无序列表、有序列表、自定义列表\n无序列表&lt;ul&gt;\n\t&lt;li&gt;&lt;&#x2F;li&gt;\n\t...\n&lt;&#x2F;ul&gt;\n\n有序列表&lt;ol&gt;\n\t&lt;li&gt;&lt;&#x2F;li&gt;\n\t...\n&lt;&#x2F;ol&gt;\n\n自定义列表通常对于术语或名词进行解释和描述，定义列表前的列表项没有任何项目符号\n&lt;dl&gt;\n\t&lt;dt&gt;名词1&lt;&#x2F;dt&gt;\n\t&lt;dd&gt;名词1解释1&lt;&#x2F;dd&gt;\n\t&lt;dd&gt;名词1解释2&lt;&#x2F;dd&gt;\n&lt;&#x2F;dl&gt;\n\n3. 表单标签为了收集用户信息，通常由表单域、表单控件（表单元素）和提示信息3部分组成\n表单域表单域是一个包含表单元素的区域，将&lt;form&gt;范围内的表单元素信息提交给服务器\n&lt;form action&#x3D;&quot;url地址&quot; method&#x3D;&quot;提交方式&quot; name&#x3D;&quot;表单域名称&quot;&gt;\n\t各种表单域控件\n&lt;&#x2F;form&gt;\n\n表单元素表单元素就是允许用户在表单中输入或者选择的内容控件\n&lt;input&gt;表单元素（单标签）&lt;input type&#x3D;&quot;属性值&quot; &#x2F;&gt;\ntype属性值：\n\n\n\n属性值\n描述\n\n\n\nbutton\n定义可点击按钮(多数情况下，用于通过JavaScript启动脚本)。\n\n\ncheckbox\n定义复选框。\n\n\nfile\n定义输入字段和“浏览”按钮，供文件上传。\n\n\nhidden\n定义隐藏的输入字段。\n\n\nimage\n定义图像形式的提交按钮。\n\n\npassword\n定义密码字段。该字段中的字符被掩码。\n\n\nradio\n定义单选按钮。\n\n\nreset\n定义重置按钮。重置按钮会清除表单中的所有数据。\n\n\nsubmit\n定义提交按钮。提交按钮会把表单数据发送到服务器。\n\n\ntext\n定义单行的输入字段，用户可在其中输入文本。默认宽度为20个字符。\n\n\ninput其它属性值\n\n\n\n属性\n属性值\n描述\n\n\n\nname\n由用户自定义\n定义input元素的名称。\n\n\nvalue\n由用户自定义\n规定input元素的值。\n\n\nchecked\nchecked\n规定此 input元素首次加载时应当被选中。\n\n\nmaxlength\n正整数\n规定输入字段中的字符的最大长度。\n\n\nplaceholder\n由用户自定义\n占位符，提示用户输入的文本\n\n\nmultiple\n布尔类型\n多文件选择\n\n\ninput标签——按钮在网页中显示不同功能的按钮表单控件（需放在form标签中使用）\ntype属性值：\n\n\n\n标签名\ntype属性值\n说明\n\n\n\ninput\nsubmit\n提交按钮。点击之后提交数据给后端服务器\n\n\ninput\nreset\n重置按钮。点击之后恢复表单默认值\n\n\ninput\nbutton\n普通按钮。默认无功能，之后配合js添加功能\n\n\n\n&lt;form&gt;\n\t&lt;input type&#x3D;&quot;button&quot; value&#x3D;&quot;普通按钮&quot;&gt;\n&lt;&#x2F;form&gt;\n\n按钮标签属性值同上；双标签button重置按钮\n&lt;button type&#x3D;&quot;reset&quot;&gt;button重置按钮&lt;&#x2F;button&gt;\n\nselect下拉菜单标签在网页中提供多个选择项的下拉菜单表单控件\n\nselect标签：下拉菜单的整体\noption标签：下拉菜单的每一项\nselected属性：下拉菜单的默认选中\n\n你喜欢这个博客吗    喜欢    超级喜欢    无敌喜欢    …\n你喜欢这个博客吗&lt;select&gt;\n\t&lt;option&gt;喜欢&lt;&#x2F;option&gt;\n\t&lt;option&gt;超级喜欢&lt;&#x2F;option&gt;\n\t&lt;option&gt;无敌喜欢&lt;&#x2F;option&gt;\n\t...\n&lt;&#x2F;select&gt;\n\ntextarea文本域标签网页中提供可输入多行文本的表单控件cols属性：规定了文本域内可见宽度rows属性：规定了文本域内可见行数（通常使用CSS）右下角可以拖拽大小\n\n&lt;textarea cols&#x3D;&quot;10&quot; rows&#x3D;&quot;10&quot;&gt;&lt;&#x2F;textarea&gt;\n\nlabel标签用于绑定内容与表单标签的关系\n使用方法一：①使用label标签把内容包裹起来②在表单标签上添加id属性③在label标签的for属性中设置对于的id属性值\n敲代码\n&lt;input type&#x3D;&quot;checkbox&quot; id&#x3D;&quot;one&quot;&gt;&lt;label for&#x3D;&quot;one&quot;&gt;敲代码&lt;&#x2F;label&gt;\n\n使用方法二：①直接使用label标签把内容和表单标签一起包裹起来②把label标签的for属性删除即可\n\n    写博客\n\n&lt;label&gt;\n\t&lt;input type&#x3D;&quot;checkbox&quot;&gt;写博客\n&lt;&#x2F;label&gt;\n\n语义化标签\n没有语义的标签&lt;div&gt;一行只显示一个（独占一行）；&lt;span&gt;一行可以显示多个\n\n有语义的标签\n\n\n\n\n\n标签名\n语义\n\n\n\nheader\n网页头部\n\n\nnav\n网页导航\n\n\nfooter\n网页底部\n\n\naside\n网页侧边栏\n\n\nsection\n网页区块\n\n\narticle\n网页文章\n\n\n字符实体特殊情况的表示\n\n\n\n显示结果\n描述\n实体名称\n实体编号\n\n\n\n\n空格\n&amp;nbsp;\n&amp;#160;\n\n\n&lt;\n小于号\n&amp;lt;\n&amp;#60;\n\n\n&gt;\n大于号\n&amp;gt;\n&amp;#62;\n\n\n&amp;\n和号\n&amp;amp;\n&amp;#38;\n\n\n“\n引号\n&amp;quot;\n&amp;#34;\n\n\n`\n撇号\n&amp;apos;(IE不支持)\n&amp;#39;\n\n\n查阅文档百度：https://www.baidu.comW3C：https://www.w3school.com.cn/MDN：https://developer.mozilla.org/zh-CN/\n到这里就已经学完HEML页面了！！！冲冲冲\nCSS简介CSS(Cascading style sheets):层叠样式表作用：给页面中的HTML标签设置样式css写在style标签中，style标签一般写在head标签里面，title标签下面\n常见属性：\n\n\ncss常见属性\n作用\n\n\n\ncolor\n文字颜色\n\n\nfont-size\n字体大小\n\n\nbackground-color\n背景颜色\n\n\nwidth\n宽度\n\n\nheight\n高度\n\n\nCSS引入\n\n\n引入方式\n书写位置\n作用范围\n使用场景\n\n\n\n内嵌式\nCSS写在style标签中\n当前页面\n小案例\n\n\n外联式\nCSS写在单独的css文件中，通过link标签引入\n多个页面\n项目中\n\n\n行内式\nCSS写在标签的style属性中\n当前标签\n配合js使用\n\n\n内嵌式：&lt;style&gt;\n    p &#123;\n        color: red;\n    &#125;\n&lt;&#x2F;style&gt;\n\n外联式：&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;.&#x2F;xxx.css&quot;&gt;\n\n行内式：&lt;p style&#x3D;&quot;color: green;&quot;&gt;我是一个p标签&lt;&#x2F;p&gt;\n\n基础选择器标签选择器结构：标签名{ css属性名: 属性值; }作用：通过标签名，找到页面中所有这类标签，设置样式标签选择器选择的是一类标签，而不是单独某一个\ndiv &#123;\n\t\tcolor: red;\n    &#125;\n\n类选择器结构:.类名{ css属性名:属性值;}作用:通过类名，找到页面中所有带有这个类名的标签，设置样式注意：\n\n所有标签上都有class属性，class属性的属性值称为类名（类似于名字)\n类名可以由数字、字母、下划线、中划线组成，但不能以数字或者中划线开头\n一个标签可以同时有多个类名，类名之间以空格隔开\n类名可以重复，一个类选择器可以同时选中多个标签.className &#123;\n\tcolor: red;\n&#125;\n\nid选择器结构:#id属性值{ css属性名:属性值;}作用:通过id属性值，找到页面中带有这个id属性值的标签，设置样式注意:\n\n所有标签上都有id属性\nid属性值类似于身份证号码，在一个页面中是唯一的，不可重复的!\n一个标签上只能与一个id属性值\n一个id选择器只能选中一个标签#idName &#123;\n\tcolor: red;\n&#125;\n\n类与id的区别class类名与id属性值的区别\n\nclass类名相当于姓名，可以重复，一个标签可以同时有多个class类名\n\nid属性值相当于身份证号码，不可重复，一个标签只能有一个id属性值类选择器与id选择器的区别\n\n类选择器以.开头\n\nid选择器以#开头实际开发的情况\n\n类选择器用的最多\n\nd一般配合js使用，除非特殊情况，否则不要使用id设置样式\n\n际开发中会遇到冗余代码的抽取(可以将一些公共的代码抽取到一个公共的类中去)\n\n\n通配符选择器结构: *{ css属性名: 属性值; }作用:找到页面中所有的标签，设置样式一般用于清除元素默认拥有的内边距、外边距\n* &#123;\n\tpadding: 0;\n    margin: 0;\n&#125;\n\n高级选择器在实际工作当中，我们网页中标签的嵌套关系可能很复杂，用基础选择器可能实现不了选中标签添加样式，或者用基础选择器选中标签添加样式比较复杂。\n后代选择器左侧的都是祖先标签的选择器，而且祖先标签的选择器之间用一个空格隔开，最右侧的这个选择器，是最终添加样式的标签选择器。可以省略一些祖先标签选择器\n&lt;style&gt;\n    div ul li &#123;\n        color: green;\n    &#125;\n&lt;&#x2F;style&gt;\n\n交集选择器\n被选中需要添加样式的标签要同时符合多个选择器\n一般是标签选择器和类选择器\n标签选择器和类选择器紧邻，没有任何符号&lt;style&gt;\n    p.cur &#123;\n        color: red;\n    &#125;\n&lt;&#x2F;style&gt;\n\n&lt;body&gt;\n    &lt;div&gt;\n        &lt;p&gt;我是交集选择器&lt;&#x2F;p&gt;\n        &lt;p class&#x3D;&quot;cur&quot;&gt;我是交集选择器&lt;&#x2F;p&gt;\n    &lt;&#x2F;div&gt;\n&lt;&#x2F;body&gt;\n\n并集选择器并集选择器是由基础选择器之间用逗号隔开,代表这些选择器合并在一起共同添加样式\n&lt;style&gt;\n    h2 , p &#123;\n        color: red;\n    &#125;\n    &lt;&#x2F;style&gt;\n\nCSS特性继承性\n祖先元素的样式中（涉及到文字相关样式），后代元素可以继承\n就近原则继承\n如果距离相同，选择权重高的父级\n若都是父级，选择最后一个\n\n层叠性\n如果网页中标签同时被多个选择器选中，添加相同样式，选则最后一个选择器\n在css中权重高的选择器，会层叠掉权重低的选择器。基础选择器  在基础选择器中，根据选择器选择范围大小，划分权重，选择器选择范围越小，权重越高。  id选择器权重&gt;类选择器权重&gt;标签选择器权重&gt;通配符选择器权重高级选择器  如果高级选择器同时被多个选择器选中，对比：  id选择器个数=&gt;类选择器个数=&gt;标签选择器个数\n若标签没有被选中，继承祖先元素文字样式    \n\n字体样式color\n设置文字的颜色\n属性名  颜色名:·红色: red 、橙色: orange、黄色: yellow、绿色: green、青色: cyan、蓝色: blue、紫色: puple颜色值:  颜色值: \n以#开头的十六进制数值 \nrgb(red,green,blue)由三色素组成，需要0~255之间的数字#box &#123;\n\tcolor: gold;\n&#125;\nfont-size\n\n\nfont-size:字体大小\npx：像素单位，谷歌浏览器默认文字大小为16px，最小12px\n任意浏览器字体大小都是上不封顶的属性值:有三种写法。\n素单位:比如50px，代表文字大小为50像素。\n分比写法:就是后代元素的字体大小，是祖先元素字体大小的百分比。\nem单位:就是后代元素的字体大小，是祖先元素的字体大小的多少倍#box &#123;\n\tfont-size: 16px;\n\tfont-size: 500%;\n\tfont-size: 5em;\n&#125;\n\n\n\nline-height\n设置文字实际占有的高度，且文字在行高中垂直居中\n属性值： 像素单位、百分比（按照font-size的比例）\n经常用来固定宽度和高度的标签，文字垂直居中（让行高和盒子高度相等）div &#123;\n        height: 200px;\n        line-height: 200px;\n    &#125;\n\nfont-family\nfont-family：设置文字的字体，文字分为中文、英文。中英文都有对应的字体\n常用的中文字体：微软雅黑、方正粗黑宋简体、楷体\n常用英文字体：Arial\n如果文字内容，为文字+英文，设置多个中英文字体。从左到右找到第一个符合自己字体进行设置楷体\n&lt;div style&#x3D;&quot;font-family:&#39;楷体&#39;&quot;&gt;楷体&lt;&#x2F;div&gt;\n\nfont-weight\n可以让文字加粗\n属性值：\n数值(100~700的整数）font-weight: 400\n英文单词：normal:相当于默认加粗数值400。bold:相当于数字700\n\n\n\nfont-style设置字体样式属性值：    1. normal    默认值。浏览器显示一个标准的字体样式。    2. italic    浏览器会显示一个斜体的字体样式。    3. oblique    浏览器会显示一个倾斜的字体样式。\nfont复合样式font:font-style font-weight font-size/line-height font-stylefont:italic bold 50px/300px &#39;楷体&#39;;    \n文本样式text-align\n设置网页中文本的水平对其方式\n属性值:left（靠左对其）、center（居中对齐）、right（靠右对齐）    \n\ntest-decoration\n给文本添加线条修饰\n属性值：\nnone（没有线条修饰）\noverline（文本上方有线条修饰）\nline-through（文本中有线条的修饰）\nunderline（文本有下线的修饰）\n\n\n\ntext-indent\n设置文本的首行缩进距离\n属性值\n像素单位：比如100px，代表文本首行向右缩进100像素\nem单位：比如10em，代表文本首行向右缩进10个中文字符\n\n\n\n盒模型\n盒模型就是网页中的标签，在网页中实际占有的区域\n盒模型有五个样式：width（宽度）、height（高度）、padding（内边距）、border（边框）、margin（外边距）\n标签在网页中实际占有的区域：width+height+padding+border+margin\n标签可以书写内容区域：width+height\n\nwidth、height\n宽度（width）、高度（height）：设置标签可以书写内容区域\n属性值：像素单位、百分比单位（参照父元素的宽度和高度）\nbody是网页主体宽度，默认宽度为用户浏览器宽度\n类似div这种容器级别标签，如果没有设置w、h。宽度默认和父元素一般宽。高度为零。如果设置文本，会让文本撑出一个高度。\n\npadding\n内边距（padding）：设置宽高和边框的距离\n内边距不能显示内容，但可以设置背景\n属性值：像素单位\npadding是一个复合样式，由padding-top、padding-right：padding-bottom、padding-top组成\n写法：\n\n\n四个属性值，用空格隔开（分别代表上、右、下、左内边距）padding: 10px 20px 30px 40px\n三个属性值，用空格隔开（分别代表上、右和左、下内边距）padding: 10px 20px 40px\n两个属性值，用空格隔开（分别代表上下、左右内边距）padding: 10px 20px\n一个属性值（分别代表上右下左内边距）padding: 10px\n\n-如果符合样式padding 属性值书写完毕，在复合样式后面，如果在出现单一内边距样式出现。会覆盖前者内边距设置数据。\npadding:20px;\npadding-left:40px;\n\nborder\n设置标签外层边框\n属性值由三部分组成：边框宽度、边框线条设置、边框颜色，用空格隔开border: 1px solid red\nborder是一个复合样式，由border-width（边框宽度）、border-style（边框线条类型）、border-color（边框颜色）\nborder-width（四种写法与padding标签类似）\nborder-style（四种写法与padding标签类似）.属性值：solid（实线）、dashed（虚线）\nborder-color（四种写法与padding标签类似）\n\nmargin\n设置标签与标签之间的距离\n外边距中不能显示内容，不能设置背景\n属性值：类似于padding，有四种写法\n\n至此CSS样式就学完啦！想要掌握还是要多练习哦\nJavaScript可以给网页添加动态效果\nJS编写位置\n可以将JS代码写到标签的onclick属性中点我一下\n&lt;button onclick&#x3D;&quot;alert(&#39;讨厌，点我干嘛&#39;)&quot;&gt;点我一下&lt;&#x2F;button&gt;\n可以将JS代码写在超链接href属性中你也点我一下\n&lt;a href&#x3D;&quot;javascript:alert(&#39;让你点你就点&#39;)&quot;&gt;你也点我一下&lt;&#x2F;a&gt;\n可以将JS代码写在script标签中\n&lt;script&gt;\n        alert(&quot;我是script标签中的代码&quot;)\n&lt;&#x2F;script&gt;\n可以将JS代码编写到外部JS文件中，通过script标签引入\n&lt;script src&#x3D;&quot;xxx.js&quot;&gt;&lt;&#x2F;script&gt;\n\nJS的组成\nECMAScript、DOM、BOM\nECMAScript：它是欧洲计算机协会，大概每年六月中旬定制语法规范\nDOM(document object model):文档对象模型\nBOM(browser object model):浏览器对象模型\n\n书写规范\nJS语法，务必通过双闭合标签script，嵌套在网页内部执行。\nscript标签可以放在程序任意地方，但是一般会放在程序最下方。\nscript标签内部，只能放JS语法。标签、样式别在script标签内部书写。\nscript标签有一个type 属性，属性值为text/javascript。代表的是书写JS语法。\n\n内置函数alert\n在浏览器的正上方弹出警告框alert(&quot;弹出警告框&quot;);\n\n控制台的使用\n通过console对象的log方法在控制台中输出一些内容console.log(&quot;控制台打印&quot;)\n当程序出现错误时，可以在控制台中查看\n控制台可以进行一些数学运算\n\n字面量\n字面量就是某个类型数据的一个固定数值\n\n五个基本数据类型\n\n\n\n数据类型\n数值\n\n\n\nString(字符串类型)\n“string”\n\n\nnumber(数字类型)\n100、200\n\n\nboolean(布尔类型)\ntrue、false\n\n\nundefined(未定义类型)\nundefined\n\n\nnull(空对象类型)\nnull\n\n\n\n一个引用类型\n\n\n\n数据类型\n数值\n\n\n\nobject(引用类型)\n函数、数值、正则、DOM、BOM\n\n\n\n\n数字类型字面量\n使用频率较高，整数和小数（浮点数）。\n数字在控制台中打印是蓝色的\n整数字面量，十进制，区分正负\n浮点数，0~1之间的小数可以省略0console.log(.123)\n小数在进行计算时，在进行0.1+0.2计算时，计算机底层转换为二进制数据进行计算，没办法整除（后面保留17位小数）。遵守IEEE754浮点数算数标准\n科学计数法console.log(6e2)相当于6*10^2特殊值\nInfinity：在JS中，数字是有范围的：-2^53~2^53.若超出，可以用特殊值Infinity（无穷大，有正负之分）console.log(12/0)\nNaN：【Not A Number】，当计算不出结果时返回特殊值NaNconsole.log(0/0)\n\n字符串类型字面量\n字符串（String）类型数据需要加上单引号或双引号\n字符串在控制台打印为黑色\n\n变量\n变量（variable）可以装载任意类型的字面量数值，或数学计算结果\n一个变量是声明了，但是没有赋值。默认初始值为未定义类型的特殊值undefined。\n浏览器在解析代码时，会将声明部分提升到当前作用域最上方\n\n声明使用变量前，需要通过var进行声明 var name;\n\n\n\n\n赋值 可以将任意字面量数值、数学计算结果赋值给变量name = 123;\n使用 通过访问变量名字获取变量存储结果console.log(name);\n\n命名标识符规范\n可以是数字、英文字母、下划线、美元符号$\n不能以数字开头\n不能是关键字、保留字\n\n数据类型判断\n利用关键字typeof检测数据类型\ntypeof + 空格 + 数据consloe.log(typeof 123)返回number\n\n数据类型转换\n将数字转换为字符串，使用连字符“+”  语句当中没有出现子符串，这个加号即为加法。可以进行数学运算。  语句当中出现了字符串，这个加号（连字符）。将数据从左到右拼接为一个整体字符串。  consloe.log(123 + &quot;666&quot;) 输出123666\n将字符串转换为数字，使用内置函数parseInt和parseFloat  parseInt，可以将字符串中的数字形式字符，转换为数字（整数部分)  在进行转换的时候，从左到右进行转换，如果是数字形式字符，转换为数字。遇见了非数字形式字符，后面数据就不再进行转换。  consloe.log(parseInt(3.14)) 输出3  parseFloat，可以将字符串中的数字形式字符，转换为数字（精确到小数部分)  consloe.log(parseInt(3.14)) 输出3.14\n\n提示框注意事项\nprompt可以在浏览器正上方弹出一个提示框，我们可以获取到用户在文本框输入的文字\n输入的数据为字符串类型var age = propmt(&#39;请输入您的年龄&#39;)\n\n数学对象\n数学对象的属性consloe.log(Math.PI)\n数学对象的方法consloe.log(Math.pow(2,3))\n\n数学运算符加（+）、减（-）、乘（*）、除（/）、取余（%）\n\nInfinity类型加减乘除都为Infinity，取余结果为NaN\nNaN加减乘除取余结果均为NaN\n\n其它数据类型浏览器自动将这些数据隐式转换为数字参与数学运算\n\n\n\n数据类型\n转换为数字\n\n\n\ntrue\n1\n\n\nfalse\n0\n\n\nundefined\nNaN\n\n\nnull\n0\n\n\nconsole.log(Number(false))输出0\n\n\n\nString类型参与数学运算\n字符串和加号一起使用〈连字符）。将数据从左到右依次拼接，转换为字符串。\n字符串和减、乘、除、取余数进行数学运算的时候。字符串需要隐式转换为数字参与\n\n\n\n\nString类型\n隐式转换为数字\n\n\n\n空字符串””\n0\n\n\n纯数字字符的字符串“123”\n转换为对应数字123\n\n\n非纯数字字符串“wwj520”\n转换为NaN\n\n\n比较运算符\n在JS语言当中比较运算符一共八个。\n比较运算符作用:  进行数据对比，如果对比结果是真的，返回布尔值true，如果对比的结果为假的，返回布尔值false  在JS中，不仅仅数字类型的数据可以参与比较运算符，其他类型的数据（字符串、布尔值、未定义、空对象〉也可以参与比较运算。只不过浏览器中的解析器，将其他类型的数据自动的‘隐式转换’为数字进行比较。\n\n\n\n\n运算符\n名称\n\n\n\n&gt;\n大于\n\n\n&gt;=\n大于等于\n\n\n&lt;\n小于\n\n\n&lt;=\n小于等于\n\n\n==\n相等\n\n\n!=\n不等\n\n\n===\n全等\n\n\n!==\n不全等\n\n\n\n两个等号（相等的判断）,判断依据是数值是否相等。\n\n三个等号（全等的判断），判断的依据是数值和数据类型是否全等。\n\n在JS中，特殊值Infinity、NaN、undefined、null中，只有NaN与自身比较时不等，其余特殊值与自身比较都相等。\n\nNaN参与比较运算，只有带！（不）返回true，其余都是false\n\n其它数据类型参与比较时，隐式转换为数字比较\n\n字符串和字符串进行对比时通过ASCII进行对比，从左到右依次对比。09&lt;AZ\n\n\n逻辑运算符\n逻辑与&amp;&amp;、逻辑或|、逻辑非！\nJS中，一般是布尔值参与逻辑运算，其它类型数据参与逻辑运算，通过Boolean函数‘隐式转换’为布尔类型\n逻辑与，当两者同时为真时，返回true，否则返回false\n逻辑或，当两者只要有一个为真，返回true，否则返回false\n逻辑非，置反其它类型=&gt;布尔值\n\n\n数字类型数值\n布尔值\n\n\n\n0、NaN\nfalse\n\n\n其余数字\ntrue\n\n\n空字符串\nfalse\n\n\n非空字符串\ntrue\n\n\nundefined\nfalse\n\n\nnull\nfalse\n\n\n\n\n回调函数回调函数callback：当某个函数执行时，传递实参是另一个函数声明部分，这个实参的函数即为回调函数\nIIFE\nimmediate invoking function express\n声明表达式形式函数同时马上执行\n+、-、！、()可以将关键字形式函数转换为表达式形式函数\n每一个IIFE都有自己独立的作用域，且互不影响var fun &#x3D; function ()&#123;\n\tconsloe.log(&quot;这是表达式形式函数“)\n&#125;();\n\n+function ()&#123;\n\tconsloe.log(”+可以将关键字形式函数转换为表达式形式函数“)\n&#125;();\n\n(function ()&#123;\n\tconsloe.log(”+可以将关键字形式函数转换为表达式形式函数“)\n&#125;)();\n\n数组\nJS中用中括号代表数组\n数组是引用类型的数据\n有序存储任意类型数据属性和方法\nlength属性：获取当前数组元素总个数arr.length\npush方法：可以在数组尾处添加一个或多个元素arr.push(&quot;1&quot;)\npop方法：可以在数组尾处移除一个元素arr.pop()\nunshift方法：可以在数组头部添加一个或多个元素arr.unshift(&quot;1&quot;)\nshift方法：可以在数组头部移除一个元素arr.shift()\njoin方法：可以通过某个字符将数组拼接成字符串(通过返回值返回)arr.join(&quot;*&quot;)\nreverse方法：可以将当前数组元素倒置arr.reverse()\nindexOf方法：获取数组中某个元素的索引值arr.indexOf(&quot;数组中的元素&quot;)\nincludes方法：检测某个元素是不是当前数组的，若是返回true，否则返回falsearr.includes(&quot;1&quot;)\nslice方法：从原数组切割出一个新子数组（对原数组无影响）。slice(起始，结束),包含起始，不包含结束arr.slice(1,3)\nsplice方法：切割、插入、替换元素  从原数组切割出一个新子数组（对原数组有影响）。splice(起始，切割长度，插入元素)\n\n数据类型相等判断\n基本类型数据：数字、字符串、布尔、未定义类型、空对象  -&gt;栈空间，存储的是内存中的数值\n引用类型数据【object】：函数、数组                    -&gt;堆空间，存储的是地址\n基本数据比较数值是否相等，堆空间比较地址\n\n字符串的属性和方法\nlength属性：获取字符个数str.length\ntoLowerCase方法：将字符串中英文字符变为小写(通过返回值返回)\ntoUpperCase方法：将字符串中英文字符变为大写(通过返回值返回)\nsearch方法：获取一个字符的索引值\nsplit方法：将字符串通过某个字符分割为数组(通过返回值返回)str.split(&quot;&quot;)\nsubstring方法：从原字符串切割出一个新子字符串（对原数组无影响）。substring(起始，结束),包含起始，不包含结束str.substring(1,3)\nsubstr方法：从原字符串切割出一个新子字符串（对原数组无影响）。substr(起始，切割长度)\nreplace方法：可以替换某一个字符串中符合条件的字符进行替换。replace(“被替换字符”,”替换字符”)\nmatch方法：可以进行将某一个字符串中符合条件的第一个字符匹配出来，返回的是一个数组。match()\n\nJSON数据格式\nJSON 【JavaScript Object Nonation】JS对象一种标记法。\n在JS当中是有 JSON数据格式，JSON数据格式在JS当中是引用类型数据。\n前端工程师可以和后台工程师进行数据交换\nJSON 数据格式可以通过KV对存储数据、读取、修改、添加数据。var info &#x3D; &#123;\n\t&quot;name&quot;:&quot;小明&quot;,\n\t&quot;age&quot;:12\n&#125;\n读取数据info.name\ninfo[&quot;name&quot;]\n\n正则表达式\n正则表达式(regular expression)是用于匹配字符串的一种模式、方法，属于引用类型数据\n定界符://\n修饰符  g（global），全局匹配，放在右侧边界符后面，可以将符合条件的全部字符匹配出来str.match(/张杰/g) str.replace(/张杰/g,/王菲/)  i（ignore）：对大小写不敏感的匹配\n边界符  ^ 表示字符串是以^后面的内容作为开头。  $ 表示字符串是以$前面内容作为结尾\n预定义类  \\d [0-9] \\d可以匹配一个任意的数字字符  \\D 非[0-9] \\D匹配任意一个不是数字的字符  \\s 可以匹配任意的空白。  \\S 可以匹配任意的不是空白的字符。  \\w 可以匹配任意的字母、数字或下划线。  \\W 可以匹配任意的字母、数字、下划线以外的内容。\n量词  {n} 硬性量词 对应零次或者n次  {n,m} 软性量词 至少出现n次但不超过m次(中间不能有空格)  {n,} 软性量词 至少出现n次  ? 软性量词 出现零次或一次  * 软性量词 出现零次或多次(任意次) 软性量词  + 出现一次或多次（至少一次)\n分组  使用()表示分组，内部的内容会作为一个整体进行操作\nexec方法：可以在目标字符串中进行一次匹配\ntest方法：测试正则表达式中数据是否在目标字符串中出现\n字符集  简单类:匹配某一个符合条件字符。比如:[abc]  范围类:比如:[O-9][A-Z][a-z]  组合类:允许用中括号匹配不同类型的单个字符,或者是一类及多类，或者一些单一的符号。比如:[0-9a-z]\n\n类数组对象arguments\n函数的函数体中才有类数组对象\n类数组对象是引用类型数据\n可以在没有形参的情况下获取函数实参\n只能使用数组length属性，不能用其它方法\n\n闭包\n闭包即为一个可以访问其他作用域中的变量，这样的函数称为闭包\n\nDOM\nDOM其实就是JS语言中内置引用类型document对象，DOM对象经常用来操作节点（标签)比如:操作节点样式、属性、文本等等。\n\nDOM常用属性、方法\ndocumentElement:获取到节点树的html标签document.documentElement;\nhead:获取到节点树的head标签document.head;\ntitle:获取到节点title标签的文本document.title;\nbody:获取到节点document.body;\ngetElementById方法:可以获取到节点树上任意节点，通过id选择器获取document.getElementById(&quot;id&quot;)\n\n事件处理函数\n任意节点树上的节点（标签），都可以绑定一个或者多个事件。当用户触发事件的时候，系统会自动给事件处理函数传递实参，而这个参数即为事件对象event\n\n","slug":"前端基础学习","date":"2021-08-02T00:56:44.000Z","categories_index":"","tags_index":"","author_index":"no clean bowl"},{"id":"b930d835cffcfe923d9ac289441311ce","title":"我的第一篇博客文章","content":"学习了博客的搭建\n感谢https://blog.csdn.net/weixin_42365530/article/details/107750003\n","slug":"我的第一篇博客文章","date":"2021-08-01T23:11:40.000Z","categories_index":"","tags_index":"","author_index":"no clean bowl"},{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n","slug":"Hello World","date":"2021-08-01T23:06:54.629Z","categories_index":"","tags_index":"","author_index":"no clean bowl"}]